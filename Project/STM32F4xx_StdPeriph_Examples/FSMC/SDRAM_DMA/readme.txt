/**
  @page FMC_SDRAM_DMA  perform read/write operations using DMA burst transactions 
  
  @verbatim
  ******************* (C) COPYRIGHT 2013 STMicroelectronics ********************
  * @file    FMC/FMC_SDRAM_DMA/readme.txt 
  * @author  MCD Application Team
  * @version V1.2.0RC2
  * @date    20-February-2013
  * @brief   Description of the FMC SDRAM_DMA example.
  ******************************************************************************
  *
  * Licensed under MCD-ST Liberty SW License Agreement V2, (the "License");
  * You may not use this file except in compliance with the License.
  * You may obtain a copy of the License at:
  *
  *        http://www.st.com/software_license_agreement_liberty_v2
  *
  * Unless required by applicable law or agreed to in writing, software 
  * distributed under the License is distributed on an "AS IS" BASIS, 
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.
  *
  ******************************************************************************
  @endverbatim
 
@par Example Description 

  This example shows how to configure the FMC and DMA to perform DMA read/write 
  transfer operations on the MT48LC2M3B2B5-7E SDRAM memory mounted on STM324x9I-EVAL 
  board.
            
  This example gives an application of how to configure the DMA as master to perform 
  memory to memory burst transfer to read/write data from/to the SDRAM memory. 
 
  In a first step, the DMA is configured to write data to SDRAM memory with fixed 
  burst length access and data width. The end of transfer is handled by DMA stream 
  IRQ handler. The second step is to configure the DMA in order to read the written 
  data from SDRAM and check data correctness.
 
  Before running this example, a specific configuration has to be set: in the SDRAM
  associate eval driver, uncomment the defines to enable "Read Burst" feature and
  "32 bit data width" in "stm324x9i_eval_fmc_sdram.h" file, used for the memory transfer.  
  The DMA burst transfer is considerably useful when data unit is more than one byte.
 
  The LEDs are configured to indicate the example status:
  - LED1 on : correct data transfer (PASS). 
  - LED2 on : incorrect data transfer (FAIL).
  - LED3 on : DMA transfer complete.  
 
@note  
  In order to run the project, the following files have to be added in the toolchain 
  browser:
  - utilities\STM32_EVAL\STM324x9I_EVAL\stm324x9i_eval_fmc_sdram.c


@par Directory contents
                       
 - FMC/FMC_SDRAM_DMA/system_stm32f4xx.c          STM32F4xx system clock configuration file 
 - FMC/FMC_SDRAM_DMA/stm32f4xx_conf.h            Library Configuration file
 - FMC/FMC_SDRAM_DMA/stm32f4xx_it.c              Interrupt handlers
 - FMC/FMC_SDRAM_DMA/stm32f4xx_it.h              Header for stm32f4xx_it.c
 - FMC/FMC_SDRAM_DMA/main.h                      Header for main.c module 
 - FMC/FMC_SDRAM_DMA/main.c                      Main program                                        

@note The "system_stm32f4xx.c" is generated by an automatic clock configuration 
       tool and can be easily customized to your own configuration. 
       To select different clock setup, use the "STM32F4xx_Clock_Configuration_V1.1.0.xls" 
       provided with the AN3988 package available on <a href="http://www.st.com/internet/mcu/family/141.jsp">  ST Microcontrollers </a>

      
@par Hardware and Software environment 

  - This example runs on STM32F429x/STM32F439x Devices.
    
  - This example has been tested with STMicroelectronics STM32439I-EVAL (STM32F429x/ 
    STM32F439x Devices) evaluation boards and can be easily tailored to any other  
    supported device and development board.


@par How to use it ? 

 In order to make the program work, you must do the following :
 - Copy all source files from this example folder to the template folder under
   Project\STM32F4xx_StdPeriph_Templates
 - Open your preferred toolchain
 - Add the following file the project source list
    - Utilities\STM32_EVAL\STM324x9I_EVAL\stm324x9i_eval_fmc_sdram.c 
 - Change the needed configurations for this example in SDRAM associate eval driver 
 - Rebuild all files and load your image into target memory
 - Run the example

 * <h3><center>&copy; COPYRIGHT STMicroelectronics</center></h3>
 */
