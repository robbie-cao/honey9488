/**
  @page FMC_SDRAM_Basic SDRAM memory basic functionalities use example
  
  @verbatim
  ******************* (C) COPYRIGHT 2013 STMicroelectronics ********************
  * @file    FMC/FMC_SDRAM_Basic/readme.txt 
  * @author  MCD Application Team
  * @version V1.2.0RC2
  * @date    20-February-2013
  * @brief   Description of the FMC SDRAM Basic example.
  ******************************************************************************
  *
  * Licensed under MCD-ST Liberty SW License Agreement V2, (the "License");
  * You may not use this file except in compliance with the License.
  * You may obtain a copy of the License at:
  *
  *        http://www.st.com/software_license_agreement_liberty_v2
  *
  * Unless required by applicable law or agreed to in writing, software 
  * distributed under the License is distributed on an "AS IS" BASIS, 
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.
  *
  ******************************************************************************
  @endverbatim
 
@par Example Description 

  This example shows how to configure the FMC to drive the MT48LC2M3B2B5-7E SDRAM
  memory mounted on STM324x9I-EVAL evaluation board. 
  
  The goal of this example is to expalin the different fields of the FMC structure,
  and how to initialize the FMC SDRAM without using an associate driver for the 
  memory device.          

  In this example, the FMC SDRAM bank is configured and initialized explicitly 
  following all initialization sequence steps. After initializing the device, user 
  can perform read/write operations on it. A data buffer is written to the SDRAM 
  memory, then read back and checked to verify its correctness.
  
  The user can chose his own configuration by commenting/uncommenting the defines for  
  undesired/desired configurations in "main.h", for example, to enable Read Burst 
  feature, uncomment the define for the configuration "FMC_Read_Burst_Enable".
  
  If the data is read correctly from SDRAM, the LED1 is on, otherwise the LED2 is on. 

@note - The FMC mode register definition is configured using defines for the external 
        memory device mode register, defined in the main header file.
      - The function "Delay()" is used to have a delay measured of microseconds.  
 
@par Directory contents
                       
 - FMC/FMC_SDRAM_Basic/system_stm32f4xx.c          STM32F4xx system clock configuration file 
 - FMC/FMC_SDRAM_Basic/stm32f4xx_conf.h            Library Configuration file
 - FMC/FMC_SDRAM_Basic/stm32f4xx_it.c              Interrupt handlers
 - FMC/FMC_SDRAM_Basic/stm32f4xx_it.h              Header for stm32f4xx_it.c
 - FMC/FMC_SDRAM_Basic/main.h                      Header for main.c module 
 - FMC/FMC_SDRAM_Basic/main.c                      Main program                                        

@note The "system_stm32f4xx.c" is generated by an automatic clock configuration 
       tool and can be easily customized to your own configuration. 
       To select different clock setup, use the "STM32F4xx_Clock_Configuration_V1.1.0.xls" 
       provided with the AN3988 package available on <a href="http://www.st.com/internet/mcu/family/141.jsp">  ST Microcontrollers </a>
      
@par Hardware and Software environment 

  - This example runs on STM32F429x/STM32F439x Devices.
    
  - This example has been tested with STMicroelectronics STM32439I-EVAL (STM32F429x/ 
    STM32F439x Devices) evaluation boards and can be easily tailored to any other  
    supported device and development board.


@par How to use it ? 

 In order to make the program work, you must do the following :
 - Copy all source files from this example folder to the template folder under
   Project\STM32F4xx_StdPeriph_Templates
 - Open your preferred toolchain 
 - Rebuild all files and load your image into target memory
 - Run the example

 * <h3><center>&copy; COPYRIGHT STMicroelectronics</center></h3>
 */
