/**
  @page FMC_SDRAM_LowPower SDRAM memory low power mode use (self refresh mode) 
  
  @verbatim
  ******************* (C) COPYRIGHT 2013 STMicroelectronics ********************
  * @file    FMC/FMC_SDRAM_LowPower/readme.txt 
  * @author  MCD Application Team
  * @version V1.2.0RC2
  * @date    20-February-2013
  * @brief   Description of the FMC SDRAM_LowPower example.
  ******************************************************************************
  *
  * Licensed under MCD-ST Liberty SW License Agreement V2, (the "License");
  * You may not use this file except in compliance with the License.
  * You may obtain a copy of the License at:
  *
  *        http://www.st.com/software_license_agreement_liberty_v2
  *
  * Unless required by applicable law or agreed to in writing, software 
  * distributed under the License is distributed on an "AS IS" BASIS, 
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.
  *
  ******************************************************************************
  @endverbatim
 
@par Example Description 

  This example shows how to configure the FMC to drive the MT48LC2M3B2B5-7E SDRAM
  memory in low power mode (self refresh mode) mounted on STM324x9I-EVAL board.
            
  In this example, a simple application of the FMC SDRAM low power mode (self 
  refresh mode) hile the MCU is in a low power mode (STOP mode). 
  
  The purpose is to allow the SDRAM to retain data written after entering STOP mode. 
  STOP mode is a CPU low power mode which stops all clocks in the 1.2 V domain, only 
  internal SRAM and registers content are preserved.
  
  After initialization, the data is written to the SDRAM memory before sending 
  a self refresh command to it. Once the data is written, the CPU enters in STOP 
  mode and LED3 is turned on. The wakeup from STOP mode is done when pushing wakeup 
  Button and the CPU returns to RUN mode. At this time, the system clock is reconfigured. 
  Finally, a normal mode command is send to SDRAM memory to exit self refresh mode. 
  The data written to SDRAM is read back and checked.  
   
  LED3 are used to indicate the system state as following:
  - LED3 On  : CPU enters STOP mode.
  - LED3 off : the CPU is in RUN mode.
  - LED1 on  : correct data transfer (PASS). 
  - LED2 on  : incorrect data transfer (FAIL).
 
@note  
  In order to run the project, the following files have to be added in the toolchain 
  browser:
  - utilities\STM32_EVAL\STM324x9I_EVAL\stm324x9i_eval_fmc_sdram.c

@par Directory contents
                       
 - FMC/FMC_SDRAM_LowPower/system_stm32f4xx.c          STM32F4xx system clock configuration file 
 - FMC/FMC_SDRAM_LowPower/stm32f4xx_conf.h            Library Configuration file
 - FMC/FMC_SDRAM_LowPower/stm32f4xx_it.c              Interrupt handlers
 - FMC/FMC_SDRAM_LowPower/stm32f4xx_it.h              Header for stm32f4xx_it.c
 - FMC/FMC_SDRAM_LowPower/main.h                      Header for main.c module 
 - FMC/FMC_SDRAM_LowPower/main.c                      Main program                                        

@note The "system_stm32f4xx.c" is generated by an automatic clock configuration 
      tool and can be easily customized to your own configuration. 
      To select different clock setup, use the "STM32F4xx_Clock_Configuration_V1.0.0.xls" 
      provided with the AN3988 package available on <a href="http://www.st.com/internet/mcu/family/141.jsp">  ST Microcontrollers </a>

      
@par Hardware and Software environment 

 - This example runs on STM32F4xx Devices.
  
 - This example has been tested with STM324x9I-EVAL and can be easily tailored
   to any other development board.


@par How to use it ? 

 In order to make the program work, you must do the following :
 - Copy all source files from this example folder to the template folder under
   Project\STM32F4xx_StdPeriph_Templates
 - Open your preferred toolchain 
 - Rebuild all files and load your image into target memory
 - Run the example

 * <h3><center>&copy; COPYRIGHT STMicroelectronics</center></h3>
 */
